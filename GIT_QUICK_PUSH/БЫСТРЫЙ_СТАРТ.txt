╔═══════════════════════════════════════════════════════════════╗
║                  🚀 GIT - БЫСТРЫЙ СТАРТ                      ║
║            Шпаргалка для работы с GitHub                     ║
╚═══════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────┐
│  📌 САМЫЙ БЫСТРЫЙ СПОСОБ (через скрипт)                     │
└─────────────────────────────────────────────────────────────┘

cd /root/Asterisk_bot/GIT_QUICK_PUSH
./quick_push.sh "Ваше описание изменений"

✅ Готово! Всё автоматически отправится на GitHub!


┌─────────────────────────────────────────────────────────────┐
│  📖 БАЗОВЫЕ КОМАНДЫ (если делаете вручную)                  │
└─────────────────────────────────────────────────────────────┘

1. Проверить что изменилось:
   git status

2. Добавить все изменения:
   git add .

3. Создать коммит:
   git commit -m "Описание изменений"

4. Отправить на GitHub:
   git push origin main


┌─────────────────────────────────────────────────────────────┐
│  🔄 ПОЛУЧИТЬ ИЗМЕНЕНИЯ С GITHUB                             │
└─────────────────────────────────────────────────────────────┘

git pull origin main


┌─────────────────────────────────────────────────────────────┐
│  📊 ПОЛЕЗНЫЕ КОМАНДЫ                                        │
└─────────────────────────────────────────────────────────────┘

Посмотреть историю:      git log --oneline
Информация о remote:     git remote -v
Посмотреть изменения:    git diff


┌─────────────────────────────────────────────────────────────┐
│  🔗 НАША ИНФОРМАЦИЯ                                         │
└─────────────────────────────────────────────────────────────┘

Репозиторий:  https://github.com/Askhat-cmd/asterisk_bot_metrotest
Ветка:        main
Токен в:      ~/.git-credentials


┌─────────────────────────────────────────────────────────────┐
│  📚 ПОЛНАЯ ДОКУМЕНТАЦИЯ                                     │
└─────────────────────────────────────────────────────────────┘

Читайте файл: README_GIT_ДЛЯ_НОВИЧКОВ.md
Там всё объяснено подробно и простым языком!


┌─────────────────────────────────────────────────────────────┐
│  💡 СОВЕТЫ                                                  │
└─────────────────────────────────────────────────────────────┘

✅ Делайте коммиты часто (после каждого логического изменения)
✅ Пишите понятные описания ("Исправил баг X" вместо "фикс")
✅ Делайте git pull перед началом работы
✅ Проверяйте git status перед коммитом


┌─────────────────────────────────────────────────────────────┐
│  🆘 ЧАСТЫЕ ПРОБЛЕМЫ                                         │
└─────────────────────────────────────────────────────────────┘

❌ "Permission denied" или 403
   → Проверьте токен в ~/.git-credentials

❌ "Your branch is behind"
   → Сначала: git pull origin main
   → Потом: git push origin main

❌ "Merge conflict"
   → Откройте файл, удалите маркеры <<<<< ===== >>>>>
   → git add . && git commit -m "Разрешил конфликт"


════════════════════════════════════════════════════════════════

              Удачи в работе с Git! 🚀

════════════════════════════════════════════════════════════════

