#!/bin/bash

##############################################################################
# –°–ö–†–ò–ü–¢ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –î–ò–°–ö–û–í–û–ì–û –ü–†–û–°–¢–†–ê–ù–°–¢–í–ê
# –ü—Ä–æ–µ–∫—Ç: –ú–µ—Ç—Ä–æ—Ç—ç—Å—Ç Voice Bot
# –í–µ—Ä—Å–∏—è: 1.0
# –î–∞—Ç–∞: 15.10.2025
##############################################################################

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§–∞–π–ª—ã –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
HISTORY_FILE="/root/Asterisk_bot/CHECK_DISK/.disk_history.txt"
CURRENT_FILE="/tmp/disk_current_$$.txt"

# –§—É–Ω–∫—Ü–∏–∏
print_header() {
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${BLUE}  $1${NC}"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
}

print_section() {
    echo ""
    echo -e "${GREEN}‚ñ∂ $1${NC}"
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}üî¥ $1${NC}"
}

print_ok() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
check_disk_usage() {
    USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
    USED=$(df -h / | awk 'NR==2 {print $3}')
    AVAIL=$(df -h / | awk 'NR==2 {print $4}')
    
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: $USED / –î–æ—Å—Ç—É–ø–Ω–æ: $AVAIL"
    
    if [ $USAGE -gt 95 ]; then
        print_error "–ö–†–ò–¢–ò–ß–ù–û! –î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ $USAGE%"
        echo "  –°–†–û–ß–ù–û: –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É –ª–æ–≥–æ–≤!"
    elif [ $USAGE -gt 85 ]; then
        print_warning "–î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ $USAGE% - —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞"
    elif [ $USAGE -gt 70 ]; then
        print_warning "–î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ $USAGE% - —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–æ—Å—Ç–æ–º"
    else
        print_ok "–î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ $USAGE% - –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    echo "DISK_USAGE=$USAGE" >> $CURRENT_FILE
    echo "DISK_USED=$USED" >> $CURRENT_FILE
    echo "DISK_AVAIL=$AVAIL" >> $CURRENT_FILE
}

# –¢–æ–ø-10 –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
check_top_directories() {
    echo ""
    du -sh /root/Asterisk_bot/* 2>/dev/null | sort -hr | head -10 | \
    while read SIZE DIR; do
        printf "  %-10s %s\n" "$SIZE" "$(basename $DIR)"
    done
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
    PROJECT_SIZE=$(du -sh /root/Asterisk_bot 2>/dev/null | awk '{print $1}')
    echo "PROJECT_SIZE=$PROJECT_SIZE" >> $CURRENT_FILE
}

# –¢–æ–ø-10 —Ñ–∞–π–ª–æ–≤
check_top_files() {
    echo ""
    find /root/Asterisk_bot -type f -exec du -h {} + 2>/dev/null | \
    sort -hr | head -10 | \
    while read SIZE FILE; do
        printf "  %-10s %s\n" "$SIZE" "$(basename $FILE)"
    done
}

# –ë–æ–ª—å—à–∏–µ –ª–æ–≥–∏
check_large_logs() {
    echo ""
    
    # Asterisk –ª–æ–≥–∏
    if [ -f /var/log/asterisk/messages.log ]; then
        ASTERISK_SIZE=$(du -h /var/log/asterisk/messages.log | awk '{print $1}')
        echo "  Asterisk messages.log: $ASTERISK_SIZE"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏
        ASTERISK_MB=$(du -m /var/log/asterisk/messages.log | awk '{print $1}')
        if [ $ASTERISK_MB -gt 1000 ]; then
            print_error "  ‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ù–û! Asterisk –ª–æ–≥ > 1GB!"
            echo "      –í—ã–ø–æ–ª–Ω–∏—Ç–µ: sudo logrotate -f /etc/logrotate.d/asterisk"
        elif [ $ASTERISK_MB -gt 500 ]; then
            print_warning "  ‚ö†Ô∏è  Asterisk –ª–æ–≥ > 500MB, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–æ—Ç–∞—Ü–∏—è"
        fi
        
        echo "ASTERISK_LOG_SIZE=$ASTERISK_SIZE" >> $CURRENT_FILE
    fi
    
    # –õ–æ–≥–∏ –ø—Ä–æ–µ–∫—Ç–∞
    if [ -d /var/log/metrotech ]; then
        METROTECH_SIZE=$(du -sh /var/log/metrotech 2>/dev/null | awk '{print $1}')
        echo "  Metrotech logs: $METROTECH_SIZE"
        echo "METROTECH_LOG_SIZE=$METROTECH_SIZE" >> $CURRENT_FILE
    fi
    
    # –î—Ä—É–≥–∏–µ –±–æ–ª—å—à–∏–µ –ª–æ–≥–∏
    find /var/log -type f -name "*.log" -size +50M 2>/dev/null | while read LOG; do
        SIZE=$(du -h "$LOG" | awk '{print $1}')
        echo "  $(basename $LOG): $SIZE"
    done
}

# –ó–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–æ–≤
check_recordings() {
    echo ""
    
    if [ -d /var/spool/asterisk/recording ]; then
        REC_COUNT=$(find /var/spool/asterisk/recording -name "*.wav" 2>/dev/null | wc -l)
        REC_SIZE=$(du -sh /var/spool/asterisk/recording 2>/dev/null | awk '{print $1}')
        echo "  –ó–∞–ø–∏—Å–µ–π –∑–≤–æ–Ω–∫–æ–≤: $REC_COUNT —Ñ–∞–π–ª–æ–≤ ($REC_SIZE)"
        echo "RECORDINGS_COUNT=$REC_COUNT" >> $CURRENT_FILE
        echo "RECORDINGS_SIZE=$REC_SIZE" >> $CURRENT_FILE
    fi
    
    if [ -d /var/lib/asterisk/sounds ]; then
        TTS_COUNT=$(find /var/lib/asterisk/sounds -name "stream_*.wav" 2>/dev/null | wc -l)
        TTS_SIZE=$(du -sh /var/lib/asterisk/sounds 2>/dev/null | awk '{print $1}')
        echo "  TTS —Ñ–∞–π–ª–æ–≤: $TTS_COUNT —Ñ–∞–π–ª–æ–≤ ($TTS_SIZE)"
        echo "TTS_COUNT=$TTS_COUNT" >> $CURRENT_FILE
        echo "TTS_SIZE=$TTS_SIZE" >> $CURRENT_FILE
    fi
}

# Backups
check_backups() {
    echo ""
    
    if [ -d /root/Asterisk_bot/project_backup ]; then
        BACKUP_COUNT=$(ls -1 /root/Asterisk_bot/project_backup 2>/dev/null | wc -l)
        BACKUP_SIZE=$(du -sh /root/Asterisk_bot/project_backup 2>/dev/null | awk '{print $1}')
        echo "  Project backups: $BACKUP_COUNT –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π ($BACKUP_SIZE)"
        echo "BACKUP_COUNT=$BACKUP_COUNT" >> $CURRENT_FILE
        echo "BACKUP_SIZE=$BACKUP_SIZE" >> $CURRENT_FILE
        
        if [ $BACKUP_COUNT -gt 5 ]; then
            print_warning "  ‚ö†Ô∏è  –ú–Ω–æ–≥–æ backups ($BACKUP_COUNT), —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3"
        fi
    fi
}

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
compare_with_history() {
    if [ ! -f "$HISTORY_FILE" ]; then
        echo ""
        echo "–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (—ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)"
        return
    fi
    
    echo ""
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    source "$HISTORY_FILE"
    PREV_USAGE=$DISK_USAGE
    PREV_PROJECT_SIZE=$PROJECT_SIZE
    PREV_ASTERISK_SIZE=$ASTERISK_LOG_SIZE
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    source "$CURRENT_FILE"
    CURR_USAGE=$DISK_USAGE
    CURR_PROJECT_SIZE=$PROJECT_SIZE
    CURR_ASTERISK_SIZE=$ASTERISK_LOG_SIZE
    
    # –î–∞—Ç–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    PREV_DATE=$(stat -c %y "$HISTORY_FILE" | cut -d' ' -f1)
    
    echo "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π ($PREV_DATE):"
    echo ""
    
    # –°—Ä–∞–≤–Ω–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
    if [ $CURR_USAGE -gt $PREV_USAGE ]; then
        DIFF=$((CURR_USAGE - PREV_USAGE))
        print_warning "  –î–∏—Å–∫: $PREV_USAGE% ‚Üí $CURR_USAGE% (+$DIFF%)"
    elif [ $CURR_USAGE -lt $PREV_USAGE ]; then
        DIFF=$((PREV_USAGE - CURR_USAGE))
        print_ok "  –î–∏—Å–∫: $PREV_USAGE% ‚Üí $CURR_USAGE% (-$DIFF%)"
    else
        echo "  –î–∏—Å–∫: $CURR_USAGE% (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)"
    fi
    
    # –°—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
    echo "  –ü—Ä–æ–µ–∫—Ç: $PREV_PROJECT_SIZE ‚Üí $CURR_PROJECT_SIZE"
    
    # –°—Ä–∞–≤–Ω–∏—Ç—å Asterisk –ª–æ–≥
    if [ ! -z "$CURR_ASTERISK_SIZE" ] && [ ! -z "$PREV_ASTERISK_SIZE" ]; then
        echo "  Asterisk log: $PREV_ASTERISK_SIZE ‚Üí $CURR_ASTERISK_SIZE"
    fi
}

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
show_recommendations() {
    USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
    
    echo ""
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
    echo ""
    
    if [ $USAGE -gt 85 ]; then
        echo "  1. ‚ö†Ô∏è  –°–†–û–ß–ù–û: –†–æ—Ç–∞—Ü–∏—è Asterisk –ª–æ–≥–æ–≤"
        echo "     sudo logrotate -f /etc/logrotate.d/asterisk"
        echo ""
        echo "  2. –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–æ–≤ (>30 –¥–Ω–µ–π)"
        echo "     find /var/spool/asterisk/recording/ -name \"*.wav\" -mtime +30 -delete"
        echo ""
        echo "  3. –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ TTS —Ñ–∞–π–ª—ã (>7 –¥–Ω–µ–π)"
        echo "     find /var/lib/asterisk/sounds/ -name \"stream_*.wav\" -mtime +7 -delete"
    elif [ $USAGE -gt 70 ]; then
        echo "  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä Asterisk –ª–æ–≥–æ–≤"
        echo "     ls -lh /var/log/asterisk/messages.log"
        echo ""
        echo "  2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É (—Å–º. CHECK_DISK/README.md)"
    else
        echo "  ‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é."
    fi
    
    echo ""
    echo "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: /root/Asterisk_bot/CHECK_DISK/README.md"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    > $CURRENT_FILE
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    clear
    print_header "üíæ –ú–û–ù–ò–¢–û–†–ò–ù–ì –î–ò–°–ö–û–í–û–ì–û –ü–†–û–°–¢–†–ê–ù–°–¢–í–ê"
    echo "–î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
    echo ""
    
    # 1. –û–±—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    print_section "1. –û–±—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞"
    check_disk_usage
    
    # 2. –¢–æ–ø –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    print_section "2. –¢–æ–ø-10 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞"
    check_top_directories
    
    # 3. –¢–æ–ø —Ñ–∞–π–ª—ã
    print_section "3. –¢–æ–ø-10 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤"
    check_top_files
    
    # 4. –õ–æ–≥–∏
    print_section "4. –ë–æ–ª—å—à–∏–µ –ª–æ–≥–∏ (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)"
    check_large_logs
    
    # 5. –ó–∞–ø–∏—Å–∏
    print_section "5. –ó–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–æ–≤ –∏ TTS —Ñ–∞–π–ª—ã"
    check_recordings
    
    # 6. Backups
    print_section "6. Backups –ø—Ä–æ–µ–∫—Ç–∞"
    check_backups
    
    # 7. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–ª–∞–≥ --compare)
    if [[ "$1" == "--compare" ]] || [[ "$2" == "--compare" ]]; then
        print_section "7. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π"
        compare_with_history
    fi
    
    # 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print_section "8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
    show_recommendations
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–ª–∞–≥ --save)
    if [[ "$1" == "--save" ]] || [[ "$2" == "--save" ]]; then
        cp $CURRENT_FILE $HISTORY_FILE
        echo ""
        print_ok "–ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ $HISTORY_FILE"
    fi
    
    # –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f $CURRENT_FILE
    
    # –§—É—Ç–µ—Ä
    echo ""
    print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    echo ""
}

# –°–ø—Ä–∞–≤–∫–∞
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --save      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"
    echo "  --compare   –°—Ä–∞–≤–Ω–∏—Ç—å —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π"
    echo "  --help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  $0 --save             # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º"
    echo "  $0 --compare          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º"
    echo "  $0 --save --compare   # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ"
    echo ""
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ "$1" == "--help" ]]; then
    show_help
    exit 0
fi

# –ó–∞–ø—É—Å–∫
main "$@"

